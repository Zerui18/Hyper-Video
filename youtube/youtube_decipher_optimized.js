module.exports={applyActions:function(d,g){for(var a={slice:function(b,a){b.slice(a)},splice:function(b,a){b.splice(0,a)},reverse:function(b){b.reverse()},swap:function(b,a){var c=b[0];b[0]=b[a%b.length];b[a]=c}},c=g.split(""),f=0,e;e=d[f];f++)a[e[0]](c,e[1]);return c.join("")},readObfFunc:function(d,g){var a=d.match(/\[(\w+)\]/g);if(a){for(var c=0,f;f=a[c];c++){var e=g.match(new RegExp("[, ]{1}"+f.slice(1,-1)+'="(\\w+)"'));e&&(d=d.replace(f,"."+e[1]))}a=d.split(";");f=[];for(c=0;e=a[c];c++)if(-1===
        e.indexOf(".split(")&&-1===e.indexOf(".join("))if(-1!==e.indexOf("reverse"))f.push(["reverse",null]);else{var b=e.match(/splice\((\d+)\)/);if(b){b=parseInt(b[1]);if(isNaN(b))return;f.push(["splice",b])}else if(b=e.match(/slice\((\d+)\)/)){b=parseInt(b[1]);if(isNaN(b))return;f.push(["slice",b])}else if(b=e.match(/\[(\d+)%\w+\.length/)){b=parseInt(b[1]);if(isNaN(b))return;f.push(["swap",b])}}return f}},getNewActList:function(d){var g=function(a,f){a=a.replace(/\$/g,"\\$");var c=f.match(new RegExp('[\\w$]+(?:\\.[\\w$]+|\\["[\\w$]+"\\])\\('+
        a+"[^)]*\\)","g"));if(!c)throw Error("readScope");return c.map(function(b){var a=/([\w$]+)(?:\.([\w$]+)|\[("[\w$]+")\])\([\w$]+,?([\w$]+)?\)/.exec(b);if(!a)throw Error("readAction");b=a[4];var c=a[1];a=a[2]||a[3];c=c.replace(/\$/g,"\\$");c=d.search(new RegExp("(?:var |,)?"+c+"={"));if(-1===c)throw Error("Place is not found");c=d.substr(c,300);a=a.replace(/\$/g,"\\$");a=c.match(new RegExp(a+":function\\(([$\\w,]+)\\){([^}]+)}"));if(!a)throw Error("Place function is not found!");a=a[2];if(/\.reverse/.test(a))b=
        ["reverse",null];else{if(!/^[\d]+$/.test(b))throw Error("Arg is not number");b=/\.splice/.test(a)?["splice",parseInt(b)]:/\.slice/.test(a)?["slice",parseInt(b)]:["swap",parseInt(b)]}return b})},a=/,sts:(\d+)/.exec(d);if(!a)throw Error("Sts is not found");parseInt(a[1]);a=/[$_a-zA-Z0-9]+\.set\("signature",([$_a-zA-Z0-9]+)\(/.exec(d);a||(a=/(?:function ([$_a-zA-Z0-9]+)|(?:var |,|;\n)([$_a-zA-Z0-9]+)=function)\(([\w$]+)\){\3=\3\.split\([^}]+;return \3\.join\([^}]+}[;,]/.exec(d))&&(a=[a[0],a[1]||a[2]]);
        if(!a)throw Error("Decode function name is not found!");a=function(a){a=a.replace(/\$/g,"\\$");a=(new RegExp("(?:function "+a+"|(?:var |,|;\n)"+a+"=function)\\(([\\w$]+)\\){([^}]*)}[;,]")).exec(d);if(!a)throw Error("findConvertFn");return g(a[1],a[2])}(a[1]);if(!a.length)throw Error("actionList is empty");return a},getActList:function(d){d.match(/,sts:(\d+)/);var g=[],a=d.match(/\.sig\|\|([$_a-zA-Z0-9]+)\(/);if(!a)return this.getNewActList(d);a=a[1];a=a.replace(/\$/g,"\\$");a=d.match(new RegExp("((?:function "+
        a+"|(?:var |,|;\n)"+a+"=function)\\(([\\w$]+)\\){[^}]*})[;,]"));if(!a)throw Error("Func is not found!");var c=a[2];a=a[1];c=new RegExp("[\\w$]+\\.[\\w$]+\\("+c+"[^)]*\\)","g");c=a.match(c);if(!c){if((g=this.readObfFunc(a,d))&&0<g.length)return g;throw Error("readObfFunc actions is not found");}var f="";a=[];for(var e=0,b;b=c[e];e++)if(b=b.match(/([\w$]+)\.([\w$]+)\([\w$]+,?([\w$]+)?\)/))f=b[1],a.push({name:b[2],arg:parseInt(b[3])});e=d.indexOf("var "+f+"={");-1===e&&(e=d.indexOf(","+f+"={"));-1===
    e&&(e=d.indexOf(f+"={"));d=d.substr(e,300);e=0;for(b;b=a[e];e++){c=b.name;c=new RegExp(c+":(function\\([$\\w,]+\\){[^}]+})");c=d.match(c);if(!c)throw Error("Match fn error");c=c[1];if(-1!==c.indexOf("splice")){if(isNaN(b.arg))throw Error("Match splice error");g.push(["splice",b.arg])}else if(-1!==c.indexOf("slice")){if(isNaN(b.arg))throw Error("Match slice error");g.push(["slice",b.arg])}else if(-1!==c.indexOf("reverse"))b.arg=null,g.push(["reverse",b.arg]);else{if(isNaN(b.arg))throw Error("Match reverse error");
        g.push(["swap",b.arg])}}return g}};